name: Update Hosts

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # daily 00:00 UTC

jobs:
  combine_hosts:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y curl grep sed coreutils

      - name: Download and combine host files (host1)
        run: |
          FILES=(
            "https://raw.githubusercontent.com/REIJI007/Adblock-Rule-Collection/main/ADBLOCK_RULE_COLLECTION_DOMAIN.txt"
            "https://raw.githubusercontent.com/REIJI007/Adblock-Rule-Collection/main/ADBLOCK_RULE_COLLECTION_HOST.txt"
            "https://raw.githubusercontent.com/REIJI007/Adblock-Rule-Collection/main/ADBLOCK_RULE_COLLECTION_HOST_IPV6.txt"
            "https://raw.githubusercontent.com/dotywrt/block-torrent/refs/heads/main/Thosts"
          )

          > host1.txt
          for url in "${FILES[@]}"; do
            echo "Checking $url..."
            if curl -s --head --fail "$url" | grep "200 OK" > /dev/null; then
              echo "  ✅ Alive, downloading..."
              curl -s "$url" >> host1.txt
            else
              echo "  ❌ Dead, skipping..."
            fi
          done

      - name: Create host2 (only clean domains)
        run: |
          # Remove comments & empty lines
          sed -i '/^\s*$/d;/^#/d' host1.txt

          # Extract only valid hostnames
          grep -oE '([a-zA-Z0-9-]+\.)+[a-zA-Z]{2,}' host1.txt | sort -u > host2.txt

      - name: Create NetGuard format
        run: |
          awk '{print "0.0.0.0 "$0}' host2.txt > netguard-host.txt

      - name: Split large files if needed
        run: |
          MAXSIZE=$((100*1024*1024)) # 100 MB
          for f in host1.txt host2.txt netguard-host.txt; do
            if [ -f "$f" ] && [ $(stat -c%s "$f") -gt $MAXSIZE ]; then
              echo "Splitting $f because it is larger than 100MB..."
              split -b ${MAXSIZE} -d -a 2 "$f" "${f%.txt}-part"
              rm "$f"
              for part in ${f%.txt}-part*; do
                mv "$part" "$part.txt"
              done
            fi
          done

      - name: Commit and push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add host1*.txt host2*.txt netguard-host*.txt
          git commit -m "Update host files" || echo "No changes to commit"
          git push
