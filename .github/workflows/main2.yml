name: Build Hosts

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *" # run daily at 00:00 UTC

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download and combine into host1.txt
        run: |
          FILES=(
            "https://raw.githubusercontent.com/REIJI007/Adblock-Rule-Collection/main/ADBLOCK_RULE_COLLECTION_DOMAIN.txt"
            "https://raw.githubusercontent.com/REIJI007/Adblock-Rule-Collection/main/ADBLOCK_RULE_COLLECTION_HOST.txt"
            "https://raw.githubusercontent.com/REIJI007/Adblock-Rule-Collection/main/ADBLOCK_RULE_COLLECTION_HOST_IPV6.txt"
            "https://raw.githubusercontent.com/dotywrt/block-torrent/refs/heads/main/Thosts"
          )

          > host1.txt
          for url in "${FILES[@]}"; do
            echo "Downloading $url..."
            curl -s "$url" >> host1.txt
            echo "" >> host1.txt
          done

      - name: Create host2.txt (domains only, no duplicates)
        run: |
          # remove comments, whitespace, and leading 0.0.0.0 / :: if present
          sed -E 's/^\s*(0\.0\.0\.0|::)\s+//g' host1.txt | \
          sed '/^#/d' | sed '/^\s*$/d' > temp.txt

          # keep only valid domain-like entries and deduplicate
          grep -E '^[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$' temp.txt | sort -u > host2.txt

          rm -f temp.txt

      - name: Create netguard-host.txt (prepend 0.0.0.0)
        run: |
          awk '{print "0.0.0.0 "$1}' host2.txt > netguard-host.txt
          sort -u netguard-host.txt -o netguard-host.txt

      - name: Commit and push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add host1.txt host2.txt netguard-host.txt
          git commit -m "Update host files" || echo "No changes to commit"
          git push
